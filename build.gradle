plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'page.nafuchoco'
version '1.6.0'

sourceCompatibility = 11
targetCompatibility = 11
compileJava.options.encoding = 'UTF-8'

jar {
    manifest {
        attributes("Main-Class": "page.nafuchoco.neojukepro.core.Main",
                "Implementation-Title": "NeoJukePro",
                "Implementation-Version": getArchiveVersion().get()
        )
    }
}

shadowJar {
    archiveName = "NeoJukePro.${extension}"
}

task sourcesJar(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.allSource
    classifier = 'sources'
}
task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}
javadoc {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/nafu-at/NeoJukePro")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from components.java

            pom {
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Logger
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'io.sentry:sentry-logback:1.7.29'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testCompileOnly 'org.projectlombok:lombok:1.18.10'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'

    // ClientLib
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    api('net.dv8tion:JDA:4.2.0_178') {
        exclude module: 'opus-java'
    }
    api 'com.github.devoxin:lavaplayer:1.3.54.3'
    api 'com.github.FredBoat:Lavalink-Client:41e1025'

    // Parser
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.2'

    // Commons Library
    implementation 'commons-io:commons-io:2.6'
    implementation 'commons-codec:commons-codec:1.14'
    implementation 'org.apache.commons:commons-lang3:3.9'

    // SQL
    implementation 'com.zaxxer:HikariCP:3.4.5'
    implementation 'mysql:mysql-connector-java:8.0.21'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.6.2'

    // Other
    implementation 'de.vandermeer:asciitable:0.3.2'
}
