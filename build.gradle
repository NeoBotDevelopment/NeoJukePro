plugins {
    id 'java'
    id 'java-library'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group 'page.nafuchoco'
version '1.1.0'

sourceCompatibility = 11
targetCompatibility = 11
compileJava.options.encoding = 'UTF-8'

jar {
    manifest {
        attributes("Main-Class": "page.nafuchoco.neojukepro.core.Main",
                "Implementation-Title": "NeoJukePro",
                "Implementation-Version": getArchiveVersion().get()
        )
    }
}

shadowJar {
    archiveName = "NeoJukePro.${extension}"
}


configurations {
    deployerJars
}
task sourcesJar(type: Jar, dependsOn: 'classes') {
    from sourceSets.main.allSource
    classifier = 'sources'
}
task javadocJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}
javadoc {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
}
artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives {
    repositories.mavenDeployer {
        configuration = configurations.deployerJars
        repository(id: 'pandasoft', url: 'ftp://sv8276.xserver.jp/') {
            authentication(userName: System.getenv("mavenUser"), password: System.getenv("mavenPassword"))
        }
        pom.project {
            inceptionYear '2020'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:3.3.4'

    // Logger
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'io.sentry:sentry-logback:1.7.29'
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testCompileOnly 'org.projectlombok:lombok:1.18.10'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'

    // ClientLib
    implementation 'com.squareup.okhttp3:okhttp:4.5.0'
    api('net.dv8tion:JDA:4.1.1_139') {
        exclude module: 'opus-java'
    }
    implementation 'com.sedmelluq:lavaplayer:1.3.49'
    implementation 'com.github.FredBoat:Lavalink-Client:41e1025'

    // Parser
    // implementation 'org.jsoup:jsoup:1.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.11.0'

    // Commons Library
    implementation 'commons-io:commons-io:2.6'
    implementation 'commons-codec:commons-codec:1.14'
    implementation 'org.apache.commons:commons-lang3:3.9'

    // SQL
    implementation 'com.zaxxer:HikariCP:3.4.3'
    implementation 'mysql:mysql-connector-java:8.0.20'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.6.0'

    // Other
    implementation 'de.vandermeer:asciitable:0.3.2'
}
